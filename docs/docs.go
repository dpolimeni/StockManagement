// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "Get test on base path.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Root Base"
                ],
                "summary": "Show the status of server.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "description": "Login to the application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login to the application",
                "parameters": [
                    {
                        "description": "UserLogin",
                        "name": "userLogin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UserLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/auth/refresh": {
            "post": {
                "description": "Refresh the token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh the token",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/restaurant": {
            "get": {
                "description": "Get a restaurant from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "summary": "Get a restaurant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Restaurant ID",
                        "name": "restaurant",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "Bearer",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Restaurant"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new restaurant to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "summary": "Add a new restaurant",
                "parameters": [
                    {
                        "description": "Restaurant object that needs to be added",
                        "name": "restaurant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.Restaurant"
                        }
                    },
                    {
                        "type": "string",
                        "default": "Bearer",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Restaurant"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a restaurant from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "summary": "Delete a restaurant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Restaurant ID",
                        "name": "restaurant",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "Bearer",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/restaurant/materials/assign": {
            "put": {
                "description": "Assign raw materials to a product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "summary": "Assign raw materials to a product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Restaurant ID",
                        "name": "restaurant",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "product",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Raw materials to assign",
                        "name": "raw_materials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schemas.RawMaterial"
                            }
                        }
                    },
                    {
                        "type": "string",
                        "default": "Bearer",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Restaurant"
                        }
                    }
                }
            }
        },
        "/api/v1/restaurant/materials/create": {
            "post": {
                "description": "Add new raw materials to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Restaurant"
                ],
                "summary": "Add new raw materials",
                "parameters": [
                    {
                        "description": "Raw materials to add",
                        "name": "raw_materials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schemas.RawMaterial"
                            }
                        }
                    },
                    {
                        "type": "string",
                        "description": "Restaurant ID",
                        "name": "restaurant",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "Bearer",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Restaurant"
                        }
                    }
                }
            }
        },
        "/api/v1/stock": {
            "get": {
                "description": "Get the stock levels of a restaurant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stock"
                ],
                "summary": "Get the stock levels",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Restaurant ID",
                        "name": "restaurant",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "Bearer",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/stock/sell": {
            "post": {
                "description": "Sell products from the stock",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stock"
                ],
                "summary": "Sell products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Restaurant ID",
                        "name": "restaurant",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Products to sell",
                        "name": "Products",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/schemas.Product"
                            }
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/api/v1/stock/update": {
            "post": {
                "description": "Purchase raw materials for the stock",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stock"
                ],
                "summary": "Purchase/Throw away raw materials",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Restaurant ID",
                        "name": "restaurant",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Materials to purchase or waste",
                        "name": "StockChange",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.StockChange"
                        }
                    },
                    {
                        "type": "string",
                        "default": "Bearer",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "handlers.UserLogin": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "schemas.Material": {
            "type": "object",
            "required": [
                "id",
                "quantity"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "number"
                }
            }
        },
        "schemas.Product": {
            "type": "object",
            "required": [
                "id",
                "name",
                "price",
                "raw_materials"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "raw_materials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.RawMaterial"
                    }
                }
            }
        },
        "schemas.RawMaterial": {
            "type": "object",
            "required": [
                "id",
                "name",
                "quantity"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "quantity": {
                    "type": "number"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "schemas.Restaurant": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Product"
                    }
                },
                "stock": {
                    "$ref": "#/definitions/schemas.Stock"
                }
            }
        },
        "schemas.Stock": {
            "type": "object",
            "properties": {
                "rawMaterials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.RawMaterial"
                    }
                }
            }
        },
        "schemas.StockChange": {
            "type": "object",
            "required": [
                "materials",
                "type"
            ],
            "properties": {
                "materials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Material"
                    }
                },
                "type": {
                    "description": "Must be purchase or waste",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Swagger Of my apis",
	Description:      "This is a sample server stock management server",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
